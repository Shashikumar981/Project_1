use uber;
Create View Successful_Bookings As
select * from bookings
where Booking_status="Success";
# 1 Retrive all successful bookings
select * from Successful_bookings;


Create View ride_distance_for_each_vehicle As 
SELECT Vehicle_Type ,AVG(Ride_Distance)
as avg_distance FROM bookings
GROUP BY Vehicle_Type;
# 2 Find the avg ride distance for each vehicle type
select * from ride_distance_for_each_vehicle;


Create View canceled_rides_by_customers As
select COUNT(*) FROM bookings
where Booking_Status="Canceled by Customer";
# 3 Get the total number of canceled rides by customer
select * from canceled_rides_by_customers;



Create View top_5Costumer As
SELECT customer_ID, count(Booking_ID) as total_rides
from bookings
GROUP BY Customer_ID
ORDER BY total_rides DESC LIMIT 5;
# 4 List the top 5 coustomers who booked the highest number of rides
select * from top_5Costumer;



Create View canceled_by_drivers_P_C_Issues As
SELECT count(*) from bookings
WHERE Canceled_Rides_by_Driver="Personal & Car related issue";
#(5) Get the number of rides cancelled by drivers due to persional and car_related issue
select * from canceled_by_drivers_P_C_Issues;



create view max_min_rating_from_prime_sedan As
SELECT MAX(Driver_Ratings) as max_rating,
MIN(Driver_Ratings) as min_rating
FROM bookings WHERE Vehicle_Type = "Prime Sedan";
#(6) Find the maximum and minimum driver rating from the prime Sedan bookings;
select * from max_min_rating_from_prime_sedan;



Create View UPI_Payment As
select * from bookings
where payment_method="UPI";
#(7) Retrive all the records where the payment method is UPI
Select * from UPI_Payment



Create View AVG_Cust_Rating As
select Vehicle_Type, AVG(Customer_Rating) as avg_customer_rating
from bookings
GROUP BY Vehicle_Type;
#(8) Find the avg customer rating per vehicle
select * from AVG_Cust_Rating;



Create View total_successful_ride_value As
select SUM(Booking_Value) as total_successful_ride_value
FROM bookings
where Booking_Status = "Success";
# (9) Calculate the total booking value of rides completed successfully
select * from total_successful_ride_value;


create view incomplete_rides_along As
SELECT Booking_ID,Incomplete_Rides_Reason
From bookings WHERE Incomplete_Rides="Yes";
# (10) List all incomplete rides along with the reasons:
select * from incomplete_rides_along;




